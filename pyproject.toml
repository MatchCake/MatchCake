[tool.pytest.ini_options]
pythonpath = [
  ".", "src",
]


[build-system]
requires = [
    "numpy (>=1.23,<3.0.0)",
    "setuptools>=57.0.0",
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "scipy>=1.11.2",
    "wheel",
    "pythonbasictools>=0.0.1a10",
    "matplotlib>=3.8.0",
]
build-backend = "setuptools.build_meta"



[project]
name = "MatchCake"
version = "0.0.2"
dynamic = ["readme"]
description = ""
authors = [
  { name="Jérémie Gince", email="gincejeremie@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10,<3.13"
dependencies = [
    "numpy (>=1.23,<3.0.0)",
    "setuptools (>=65.5.1,<65.6.0)",
    "scipy (>=1.11.4,<=2)",
    "matplotlib (>=3.8.0)",
    "networkx (>=3.1,<4.0)",
    "pfapack (>=0.3.1,<0.4.0)",
    "pythonbasictools (>=0.0.1a10)",
    "sympy (>=1.12,<2.0)",
    "tqdm (>=4.66.1)",
    "seaborn (>=0.13.0)",
    "scikit-learn (>=1.3.2)",
    "psutil (>=5.9.6)",
    "torch (>=2.1.2)",
    "tables (>=3.9.1)",
    "pylint (>=3.1.0)",
    "pennylane (>=0.39.0,<=0.41.1)",
    "pandas (>=2.1.0)",
    "pennylane-lightning (>=0.39.0,<=0.41.1)",
    "torchpfaffian (>=0.0.0)",
    "opt-einsum (>=3.4.0)",
    "importlib-metadata (>=8.7.0,<9.0.0)",
]
license={file="LICENSE"}


[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}

[project.urls]
homepage = "https://github.com/MatchCake/MatchCake"
Documentation = "https://github.com/MatchCake/MatchCake"
Source = "https://MatchCake.github.io/MatchCake"


[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.poetry.group.dev.dependencies]
pytest-cov = "^6.1.1"
pytest-json-report = "^1.5.0"
pytest = "^8.3.5"
docutils = ">=0.18.1,<0.20"
mypy = "^1.15.0"
black = "^25.1.0"
nbmake = "^1.5.5"
wheel = "^0.45.1"
build = "^1.2.2.post1"
twine = "^6.1.0"
pytest-xdist = "^3.7.0"
isort = "^6.0.1"


[tool.poetry.group.docs.dependencies]
wheel = "^0.45.1"
build = "^1.2.2.post1"
twine = "^6.1.0"
sphinx = ">=6.2.1,<6.3.0"
docutils = ">=0.18.1,<0.20"
sphinx-rtd-theme = "^3.0.2"
sphinxcontrib-bibtex = ">=2.5.0,<2.6.0"
sphinx-theme = "^1.0"
groundwork-sphinx-theme = "^1.1.1"
karma-sphinx-theme = "^0.0.8"
sphinx-mdinclude = "^0.6.2"

[tool.coverage.report]
exclude_also = [
    'def __repr__',
    'if self.debug:',
    'if settings.DEBUG',
    'raise AssertionError',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    '@(abc\.)?abstractmethod',
]

[[tool.mypy.overrides]]
module = [
    # PennyLane
    "pennylane",
    "pennylane.wires",
    "pennylane.templates.broadcast",
    "pennylane.ops.qubit.observables",
    "pennylane.typing",
    "pennylane.operation",
    "pennylane.tape",
    "pennylane.pulse",
    "pennylane.measurements",
    "pennylane.ops",
    "pennylane.numpy",
    "pennylane.ops.op_math.linear_combination",
    # Scikit-learn
    "sklearn",
    "sklearn.base",
    "sklearn.utils.validation",
    "sklearn.utils.multiclass",
    "scipy",
    "scipy.optimize",
    "sklearn.utils.estimator_checks",
    # Scipy
    "scipy.linalg",
    # Seaborn
    "seaborn",
    # PythonBasicTools
    "pythonbasictools",
    "pythonbasictools.multiprocessing_tools",
    # Others
    "tqdm",
    "joblib",
    "psutil",
    "umap",
    "tensorflow",
    "jax.scipy.linalg",
    "pfapack.pfaffian",
    "torch_pfaffian",
    "sympy",
    "networkx",
    "opt_einsum",
]
ignore_missing_imports = true


[tool.black]
line-length = 120
